class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        
        n = len(nums)
        
        # Initialize prefix and suffix arrays
        prefix = [1] * n
        suffix = [1] * n
        result = [0] * n

        # Build prefix product array
        for i in range(1, n):
            prefix[i] = prefix[i - 1] * nums[i - 1]

        # Build suffix product array
        for i in range(n - 2, -1, -1):
            suffix[i] = suffix[i + 1] * nums[i + 1]

        # Multiply prefix and suffix products for final result
        for i in range(n):
            result[i] = prefix[i] * suffix[i]

        return result
