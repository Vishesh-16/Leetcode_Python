class Solution:
    def maxSubArray(self, nums: List[int]) -> int:

        max_sum = cur_sum = nums[0]  # Start from the first element

        for i in range(1, len(nums)):
            cur_sum = max(nums[i], cur_sum + nums[i])
            max_sum = max(max_sum, cur_sum)

        return max_sum





        
        # max_sum = nums[0]
        # cur_sum = nums[0]
        # for i in range(len(nums)):
        #     cur_sum += nums[i]
        #     max_sum = max(cur_sum,max_sum)
        #     if cur_sum < 0:
        #         cur_sum = 0    
        # return max_sum


        # max_sum = 0
        # sum = 0
        # for i in range(len(nums)):
        #     sum += nums[i]
        #     max_sum = max(max_sum,sum)

        # return max_sum

        #     for price in prices:
        #     min_price = min(min_price, price)              
        #     max_profit = max(max_profit, price - min_price)  
        # return max_profit



        
